version: '3'
services:
  # web:
  #   build: .
  #   ports:
  #     - 8000:8000
  #   expose: 
  #     - 8000
  #   volumes:
  #     - ./django_app:/app
  #   command: sh -c "python manage.py runserver 0.0.0.0:8000"
  #   depends_on:
  #     - db
  #     - kafka
  #     - rabbitmq

  celery:
    build: .
    volumes:
      - ./django_app:/app
    command: sh -c "celery -A web_app worker -l info"
    environment: 
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWD: ${RABBITMQ_PASSWD}
    depends_on:
      - rabbitmq
    
  db:
    image: postgres
    restart: always
    ports:
      - ${PGPORT}:${PGPORT}
    volumes:
      - ./volumes/sql_data:/var/lib/postgresql/data:z
    environment:
      POSTGRES_DB: ${PGDB}
      POSTGRES_PASSWORD: ${PGPWD}

  kafka:
    image: 'wurstmeister/kafka'
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    expose:
      - ${KAFKA_PORT}
    hostname: ${KAFKA_HOST}
    links: 
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=${KAFKA_HOST}
      - KAFKA_ZOOKEEPER_CONNECT=${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT}
      - KAFKA_ADVERTISED_PORT=${KAFKA_PORT}

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}
      
  rabbitmq:
    image: 'rabbitmq'
    environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWD}
    ports:
        - ${RABBITMQ_PORT}:${RABBITMQ_PORT}